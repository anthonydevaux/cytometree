#'@export
#
plot_nodes <- function(CytomeTreeObj, nodes=NULL)
{
if(class(CytomeTreeObj) != "CytomeTree")
{
stop("CytomeTreeObj must be of class CytomeTree")
}
if(!is.null(nodes))
{
if(class(nodes)!="character")
{
stop("nodes must be of class character")
}
}
pl_list <- CytomeTreeObj$pl_list
if(is.null(nodes))
{
nn<- length(pl_list[[1]])
for (n in 1:nn)
{
minxinf <- min(pl_list[[1]][[n]]$x)
minxsup <- min(pl_list[[3]][[n]]$x)
maxxinf <- max(pl_list[[1]][[n]]$x)
maxxsup <- max(pl_list[[3]][[n]]$y)
minyinf <- min(pl_list[[1]][[n]]$y)
minysup <- min(pl_list[[3]][[n]]$y)
maxyinf <- max(pl_list[[1]][[n]]$y)
maxysup <- max(pl_list[[3]][[n]]$y)
plot(pl_list[[3]][[n]],
xlim=c(min(c(minxinf, minxsup)), max(c(maxxinf, maxxsup))),
ylim=c(min(c(minyinf, minysup)), max(c(maxyinf, maxysup))),
yaxt = 'n',
main =pl_list[[2]][[n]],
xlab = pl_list[[4]][[n]],
ylab = "Density",
col = "blue", lwd=2, type="l")
lines(pl_list[[1]][[n]], col='red', lwd = 2)
}
}
else
{
treenodes <- unlist(pl_list[[2]])
if(sum(nodes%in%treenodes)!=length(nodes))
{
logicalind <- as.logical(1-nodes%in%treenodes)
if(length(logicalind) >1)
{
wstr <- paste("nodes",paste(c(nodes[]),
collapse=", "),
"are not in the tree", sep = " ")
}
else
{
wstr <- paste("node",paste(c(nodes[]),
collapse=", "),
"is not in the tree", sep = " ")
}
stop(wstr)
}
inds <- which(treenodes%in%nodes)
for(ind in inds)
{
df <- data.frame("x1" = pl_list[[3]][[ind]]$x,
"y1" = pl_list[[3]][[ind]]$y,
"x2" = pl_list[[1]][[ind]]$x,
"y2" = pl_list[[1]][[ind]]$y,
"Marker" = paste0(pl_list[[2]][[ind]],
"\n", pl_list[[4]][[ind]]),
"colx1" = as.factor(rep(1,length(pl_list[[3]][[ind]]))),
"colx2" = as.factor(rep(2,length(pl_list[[3]][[ind]]))))
p <- ggplot(df, aes_string(x = "x1", y = "y1",colour = "colx1")) +
geom_line(lwd = 1)+
geom_line(data = df, aes_string(x = "x2", y = "y2", colour = "colx2"),
lwd = 1)+
scale_colour_manual(name = "",
values = c("blue","red"),
labels = c("GM", "KDE"))+
facet_wrap(~ Marker)+
theme_bw()+
ylab("Density")+
xlab("Fluorescence")+
theme(legend.position="bottom",
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
print(p)
}
}
}
phenotypes[[1]] <-  rbind(c("FL1", 0),
c("FL2", 1),
c("FL4", 0))
phenotypes[[2]] <-  rbind(c("FL1", 1),
c("FL2", 0),
c("FL4", 1))
phenotypes[[3]] <-  rbind(c("FL1", 1),
c("FL2", 1),
c("FL4", 1))
PhenoInfos <- RetrievePops(Annot, phenotypes)
PhenoInfos$phenotypesinfo
plot_nodes(Tree,"FL4.10")
plot_nodes(Tree,c("FL4.10", "FL4.100"))
plot_nodes(Tree,"FL4.1")
plot_nodes(Tree,"FL4.1")
library(cytometree)
library(cytometree)
head(DLBCL)
# number of cell event
N <- nrow(DLBCL)
# Build the binary tree with t = .1
Tree <- CytomeTree(DLBCL, minleaf = 1 ,t=.1)
# Plot node distributions
par(mfrow=c(1,2))
plot_nodes(Tree)
# Choose a node to plot
plot_nodes(Tree,"FL4.1")
# Plot a graph of the tree
par(mfrow=c(1,1))
plot_graph(Tree,edge.arrow.size=.3, Vcex =.5, vertex.size = 30)
# Run the annotation algorithm
Annot <- Annotation(Tree,plot=TRUE)
Annot$combinations
# Exemple of seeked phenotypes
# variable in which seeked phenotypes can be entered in the form
# of matrices.
phenotypes <- list()
# seeked phenotypes
phenotypes[[1]] <-  rbind(c("FL1", 0),
c("FL2", 1),
c("FL4", 0))
phenotypes[[2]] <-  rbind(c("FL1", 1),
c("FL2", 0),
c("FL4", 1))
phenotypes[[3]] <-  rbind(c("FL1", 1),
c("FL2", 1),
c("FL4", 1))
# Retreive cell populations found using Annotation
PhenoInfos <- RetrievePops(Annot, phenotypes)
PhenoInfos$phenotypesinfo
library(cytometree)
library(cytometree)
library(cytometree)
head(DLBCL)
# number of cell event
N <- nrow(DLBCL)
# Build the binary tree
Tree <- CytomeTree(DLBCL, minleaf = 1 ,t=.1)
# Plot node distributions
par(mfrow=c(1,2))
plot_nodes(Tree)
# Choose a node to plot
plot_nodes(Tree,"FL4.1")
# Plot a graph of the tree
par(mfrow=c(1,1))
plot_graph(Tree,edge.arrow.size=.3, Vcex =.5, vertex.size = 30)
# Run the annotation algorithm
Annot <- Annotation(Tree,plot=TRUE)
Annot$combinations
# Exemple of seeked phenotypes
# variable in which seeked phenotypes can be entered in the form
# of matrices.
phenotypes <- list()
# seeked phenotypes
phenotypes[[1]] <-  rbind(c("FL1", 0),
phenotypes[[2]] <-  rbind(c("FL1", 1),
phenotypes[[3]] <-  rbind(c("FL1", 1),
# Retreive cell populations found using Annotation
PhenoInfos <- RetrievePops(Annot, phenotypes)
PhenoInfos$phenotypesinfo
library(cytometree)
head(DLBCL)
# number of cell event
N <- nrow(DLBCL)
# Build the binary tree
Tree <- CytomeTree(DLBCL, minleaf = 1 ,t=.1)
# Plot node distributions
par(mfrow=c(1,2))
plot_nodes(Tree)
# Choose a node to plot
plot_nodes(Tree,"FL4.1")
# Plot a graph of the tree
par(mfrow=c(1,1))
plot_graph(Tree,edge.arrow.size=.3, Vcex =.5, vertex.size = 30)
# Run the annotation algorithm
Annot <- Annotation(Tree,plot=TRUE)
Annot$combinations
# Exemple of seeked phenotypes
# variable in which seeked phenotypes can be entered in the form
# of matrices.
phenotypes <- list()
# seeked phenotypes
phenotypes[[1]] <-  rbind(c("FL1", 0), c("FL2", 1), c("FL4", 0))
phenotypes[[2]] <-  rbind(c("FL1", 1), c("FL2", 0), c("FL4", 1))
phenotypes[[3]] <-  rbind(c("FL1", 1), c("FL2", 1), c("FL4", 1))
# Retreive cell populations found using Annotation
PhenoInfos <- RetrievePops(Annot, phenotypes)
PhenoInfos$phenotypesinfo
library(cytometree)
.81*12+.93*30+.93*30+.86*13+.92*30
104.3/115
.88+.94+.93+.84+.89
4.48/5
.94+.95+.93+.90+.89
4.61/5
head(DLBCL)
# number of cell event
N <- nrow(DLBCL)
# Build the binary tree
Tree <- CytomeTree(DLBCL, minleaf = 1 ,t=.1)
# Plot node distributions
par(mfrow=c(1,2))
plot_nodes(Tree)
# Choose a node to plot
plot_nodes(Tree,"FL4.1")
# Plot a graph of the tree
par(mfrow=c(1,1))
plot_graph(Tree,edge.arrow.size=.3, Vcex =.5, vertex.size = 30)
# Run the annotation algorithm
Annot <- Annotation(Tree,plot=TRUE)
Annot$combinations
# Exemple of seeked phenotypes
# variable in which seeked phenotypes can be entered in the form
# of matrices.
phenotypes <- list()
# seeked phenotypes
phenotypes[[1]] <-  rbind(c("FL1", 0), c("FL2", 1), c("FL4", 0))
phenotypes[[2]] <-  rbind(c("FL1", 1), c("FL2", 0), c("FL4", 1))
phenotypes[[3]] <-  rbind(c("FL1", 1), c("FL2", 1), c("FL4", 1))
# Retreive cell populations found using Annotation
PhenoInfos <- RetrievePops(Annot, phenotypes)
PhenoInfos$phenotypesinfo
N
load("label.Rdata")
length(label)
DLBCL <- cbind(DLBCL, label)
head(DLBCL)
class(DLBCL)
save(DLBCL, file = "DLBCL.rda")
library(cytometree)
head(DLBCL)
head(DLBCL)
cellevents <- DLBCL[,c("FL1", "FL2", "FL4")]
head(cellevents)
names(Tree)
cellevents <- DLBCL[,c("FL1", "FL2", "FL4")]
# Build the binary tree
Tree <- CytomeTree(cellevents, minleaf = 1 ,t=.1)
names(Tree)
manual_labels <- DLBCL[,"label"]
manual_labels
FmeasureC_no0(ref=manual_labels, pred=Partition)
Partition <- Tree$labels
FmeasureC_no0(ref=manual_labels, pred=Partition)
FmeasureC(ref=manual_labels, pred=Partition)
plot(cellevents[,1], cellevents[,2])
plot(cellevents[,1], cellevents[,3])
plot(cellevents[,1], cellevents[,3], col = manual_labels)
plot(cellevents[,1], cellevents[,3], col = Partition)
FL1 <- cellevents[,"FL1"]
FL3 <- cellevents[,"FL3"]
scatter_df <- data.frame("FL1" = FL1, "FL3" = FL3)
FL1 <- cellevents[,"FL1"]
FL4 <- cellevents[,"FL4"]
scatter_df <- data.frame("FL1" = FL1, "FL4" = FL4)
labels
Labels
plot(cellevents[,1], cellevents[,3], col = Partition)
Labels <- c(manual_labels, Tree_Partition)
Tree_Partition <- Tree$labels
Labels <- c(manual_labels, Tree_Partition)
scatter_df <- data.frame("FL1" = FL1, "FL4" = FL4, "labels" = Labels)
dim(scatter_df)
which(!labels)
rm_zeros <- which(!manual_labels)
rm_zeros
Labels <- c(manual_labels[-c(rm_zeros)], Tree_Partition[-c(rm_zeros)])
FL1 <- cellevents[-c(rm_zeros),"FL1"]
FL4 <- cellevents[-c(rm_zeros),"FL4"]
Labels <- c(manual_labels[-c(rm_zeros)], Tree_Partition[-c(rm_zeros)])
scatter_df <- data.frame("FL1" = FL1, "FL4" = FL4, "labels" = Labels)
?method
method <- c("FlowCapI", "CytomeTree")
scatter_df <- data.frame("FL1"=FL1,"FL4"=FL4,"labels"=Labels,"method"=method)
scatter_df
scatter_df <- data.frame("method"=method,"FL1"=FL1,"FL4"=FL4,"labels"=Labels)
scatter_df
length(FL1)
method <- c(rep("FlowCapI",length(FL1)),rep("CytomeTree",length(FL1)))
scatter_df <- data.frame("FL1"=FL1,"FL4"=FL4,"labels"=Labels,"method"=method)
scatter_df
n <- length(FL1)
Labels <- c(manual_labels[-c(rm_zeros)], Tree_Partition[-c(rm_zeros)])
method <- as.factor(c(rep("FlowCapI",n),rep("CytomeTree",n))
scatter_df <- data.frame("FL1"=FL1,"FL4"=FL4,"labels"=Labels,"method"=method)
rm_zeros <- which(!manual_labels)
# Building the data frame to scatter plot the data.
FL1 <- cellevents[-c(rm_zeros),"FL1"]
FL4 <- cellevents[-c(rm_zeros),"FL4"]
n <- length(FL1)
Labels <- c(manual_labels[-c(rm_zeros)], Tree_Partition[-c(rm_zeros)])
method <- as.factor(c(rep("FlowCapI",n),rep("CytomeTree",n)))
scatter_df <- data.frame("FL1"=FL1,"FL4"=FL4,"labels"=Labels,"method"=method)
scatter_df
Labels <- as.factor(Labels)
method <- as.factor(c(rep("FlowCapI",n),rep("CytomeTree",n)))
scatter_df <- data.frame("FL1"=FL1,"FL4"=FL4,"labels"=Labels,"method"=method)
p <- ggplot(scatter_df,  aes_string(x = "FL1", y="FL4",colour="labels"))+
geom_point(alpha = 1/3,cex = 1)+
scale_colour_manual(values = c("blue1" , "cyan","green","red"))+
facet_wrap(~ method)+
theme_bw()+
theme(legend.position="bottom")+
xlab("FL1")+
ylab("FL4")+
guides(colour = guide_legend(override.aes = list(alpha=1, size = 2)))
p
p <- ggplot(scatter_df,  aes_string(x = "FL1", y="FL4",colour="labels"))+
geom_point(alpha = 1/3,cex = 1)+
scale_colour_manual(values = c("blue1" , "cyan","green","red"))+
facet_wrap(~ method)+
theme_bw()+
theme(legend.position="bottom")+
xlab("FL1")+
ylab("FL4")+
guides(colour = guide_legend(override.aes = list(alpha=1, size = 2)))
library(ggplot2)
p <- ggplot(scatter_df,  aes_string(x = "FL1", y="FL4",colour="labels"))+
geom_point(alpha = 1/3,cex = 1)+
scale_colour_manual(values = c("blue1" , "cyan","green","red"))+
facet_wrap(~ method)+
theme_bw()+
theme(legend.position="bottom")+
xlab("FL1")+
ylab("FL4")+
guides(colour = guide_legend(override.aes = list(alpha=1, size = 2)))
p
p <- ggplot(scatter_df,  aes_string(x = "FL1", y="FL4",colour="labels"))+
geom_point(alpha = 1/3,cex = 1)+
scale_colour_manual(values = c("green","red"))+
facet_wrap(~ method)+
theme_bw()+
theme(legend.position="bottom")+
xlab("FL1")+
ylab("FL4")+
guides(colour = guide_legend(override.aes = list(alpha=1, size = 2)))
p
p <- ggplot(scatter_df,  aes_string(x = "FL1", y="FL4",colour="labels"))+
geom_point(alpha = 1/3,cex = 1)+
scale_colour_manual(values = c("green","red","blue"))+
facet_wrap(~ method)+
theme_bw()+
theme(legend.position="bottom")+
xlab("FL1")+
ylab("FL4")+
guides(colour = guide_legend(override.aes = list(alpha=1, size = 2)))
p
table(manual_labels[-c(rm_zeros)])
table(Tree_Partition[-c(rm_zeros)])
manual_labels_new <- manual_labels[-c(rm_zeros)]
1%%2
2%%1
2%%2
%%2
1%%2
2%%2
table(manual_labels[-c(rm_zeros)])
2%%1
2%%2
3%%1
1%%3
1%%4
1%%.5
2/.5
c(1,2)/.5
(c(1,2)/.5) - 2
table(manual_labels[-c(rm_zeros)])
table(Tree_Partition[-c(rm_zeros)])
1%%2
.5%%2
.5%%1
.25%%1
.25%%2
2%%2
3%%2
5%%2
6%%2
7%%2
1%%2
2%%2
table(manual_labels[-c(rm_zeros)]%%2 +1)
table(manual_labels[-c(rm_zeros)])
table(Tree_Partition[-c(rm_zeros)])
table(manual_labels[-c(rm_zeros)]%%2 +1)
table(Tree_Partition[-c(rm_zeros)])
# Ignoring cells labeled 0 as in FlowCAP-I
rm_zeros <- which(!manual_labels)
# Building the data frame to scatter plot the data.
FL1 <- cellevents[-c(rm_zeros),"FL1"]
FL4 <- cellevents[-c(rm_zeros),"FL4"]
n <- length(FL1)
manual_labels_new <- manual_labels[-c(rm_zeros)]
which(manual_labels_new)
Labels <- c(manual_labels[-c(rm_zeros)]%%2 +1, Tree_Partition[-c(rm_zeros)])
Labels <- as.factor(Labels)
method <- as.factor(c(rep("FlowCapI",n),rep("CytomeTree",n)))
scatter_df <- data.frame("FL1"=FL1,"FL4"=FL4,"labels"=Labels,"method"=method)
library(ggplot2)
p <- ggplot(scatter_df,  aes_string(x = "FL1", y="FL4",colour="labels"))+
geom_point(alpha = 1/3,cex = 1)+
scale_colour_manual(values = c("green","red","blue"))+
facet_wrap(~ method)+
theme_bw()+
theme(legend.position="bottom")+
xlab("FL1")+
ylab("FL4")+
guides(colour = guide_legend(override.aes = list(alpha=1, size = 2)))
p
library(ggplot2)
p <- ggplot(scatter_df,  aes_string(x = "FL1", y="FL4",colour="labels"))+
geom_point(alpha = 1,cex = 1)+
scale_colour_manual(values = c("green","red","blue"))+
facet_wrap(~ method)+
theme_bw()+
theme(legend.position="bottom")+
xlab("FL1")+
ylab("FL4")+
guides(colour = guide_legend(override.aes = list(alpha=1, size = 2)))
p
FL1 <- cellevents[-c(rm_zeros),"FL2"]
scatter_df <- data.frame("FL1"=FL2,"FL4"=FL4,"labels"=Labels,"method"=method)
library(ggplot2)
p <- ggplot(scatter_df,  aes_string(x = "FL1", y="FL4",colour="labels"))+
geom_point(alpha = 1,cex = 1)+
FL1 <- cellevents[-c(rm_zeros),"FL1"]
FL2 <- cellevents[-c(rm_zeros),"FL2"]
FL4 <- cellevents[-c(rm_zeros),"FL4"]
n <- length(FL1)
manual_labels_new <- manual_labels[-c(rm_zeros)]
which(manual_labels_new)
Labels <- c(manual_labels[-c(rm_zeros)]%%2+1, Tree_Partition[-c(rm_zeros)])
Labels <- as.factor(Labels)
method <- as.factor(c(rep("FlowCapI",n),rep("CytomeTree",n)))
rm_zeros <- which(!manual_labels)
# Building the data frame to scatter plot the data.
FL1 <- cellevents[-c(rm_zeros),"FL1"]
FL2 <- cellevents[-c(rm_zeros),"FL2"]
FL4 <- cellevents[-c(rm_zeros),"FL4"]
n <- length(FL1)
manual_labels_new <- manual_labels[-c(rm_zeros)]
which(manual_labels_new)
Labels <- c(manual_labels[-c(rm_zeros)]%%2+1, Tree_Partition[-c(rm_zeros)])
Labels <- c(manual_labels[-c(rm_zeros)]%%2+1, Tree_Partition[-c(rm_zeros)])
Labels <- as.factor(Labels)
method <- as.factor(c(rep("FlowCapI",n),rep("CytomeTree",n)))
scatter_df <- data.frame("FL1"=FL2,"FL4"=FL4,"labels"=Labels,"method"=method)
library(ggplot2)
p <- ggplot(scatter_df,  aes_string(x = "FL1", y="FL4",colour="labels"))+
geom_point(alpha = 1,cex = 1)+
scale_colour_manual(values = c("green","red","blue"))+
facet_wrap(~ method)+
theme_bw()+
theme(legend.position="bottom")+
xlab("FL1")+
ylab("FL4")+
guides(colour = guide_legend(override.aes = list(alpha=1, size = 2)))
p
rm_zeros <- which(!manual_labels)
# Building the data frame to scatter plot the data.
FL1 <- cellevents[-c(rm_zeros),"FL1"]
FL2 <- cellevents[-c(rm_zeros),"FL2"]
FL4 <- cellevents[-c(rm_zeros),"FL4"]
n <- length(FL1)
Labels <- c(manual_labels[-c(rm_zeros)]%%2+1, Tree_Partition[-c(rm_zeros)])
Labels <- as.factor(Labels)
method <- as.factor(c(rep("FlowCapI",n),rep("CytomeTree",n)))
scatter_df <- data.frame("FL2"=FL2,"FL4"=FL4,"labels"=Labels,"method"=method)
library(ggplot2)
p <- ggplot(scatter_df,  aes_string(x = "FL2", y="FL4",colour="labels"))+
geom_point(alpha = 1,cex = 1)+
scale_colour_manual(values = c("green","red","blue"))+
facet_wrap(~ method)+
theme_bw()+
theme(legend.position="bottom")+
xlab("FL1")+
ylab("FL4")+
guides(colour = guide_legend(override.aes = list(alpha=1, size = 2)))
p
p <- ggplot(scatter_df,  aes_string(x = "FL2", y="FL4",colour="labels"))+
geom_point(alpha = 1,cex = 1)+
scale_colour_manual(values = c("green","red","blue"))+
facet_wrap(~ method)+
theme_bw()+
theme(legend.position="bottom")+
xlab("FL2")+
ylab("FL4")+
guides(colour = guide_legend(override.aes = list(alpha=1, size = 2)))
p
p <- ggplot(scatter_df,  aes_string(x = "FL2", y="FL4",colour="labels"))+
geom_point(alpha = 1,cex = 1)+
scale_colour_manual(values = c("green","red","blue"))+
facet_wrap(~ method)+
theme_bw()+
theme(legend.position="bottom")+
guides(colour = guide_legend(override.aes = list(alpha=1, size = 2)))
p
p <- ggplot(scatter_df,  aes_string(x = "FL2", y="FL4",colour="labels"))+
geom_point(alpha = 1,cex = 1)+
scale_colour_manual(values = c("green","red","blue"))+
facet_wrap(~ method)+
theme_bw()+
theme(legend.position="bottom")
p
