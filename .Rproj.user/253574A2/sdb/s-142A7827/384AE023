{
    "contents" : "#' TODO\n#'@param \n#'\n#'@author Chariff Alkhassim\n#'\n#'@export \n# \n\nCytEM <- function(M, indices, minleaf, level, D)\n{\n  if(class(M)!=\"matrix\")\n  {\n    M <- as.matrix(M)\n  }\n  n <- nrow(M)\n  p <- ncol(M)\n  if(n <= minleaf)\n  {\n    return(list(\"mark_not_dis\" = 1:p))\n  }\n  mu1 <- mu2 <- Var1 <- Var2 <- pi1 <- pi2 <- c()\n  Resaic <- ind_marker <- mark_not_dis <- c()\n  child <- list()\n  for(j in 1:p)\n  {\n    flag_uni <- 0\n    M_j <- M[,j]\n    mc_uni <- Mclust(M_j, 1)\n    mc_mix <- Mclust(M_j, 2, modelNames = \"E\")\n    ind1 <- which(mc_mix$classification == 1)\n    ind2 <- which(mc_mix$classification == 2)\n    m_zeros <- 0\n    thresh_zeros <- .25   # tz parameter\n    if(length(which(!M_j)) > length(M_j) * thresh_zeros)\n    {\n      m_zeros <- 1\n    }\n    if(length(ind1) < minleaf | length(ind2) < minleaf | m_zeros)\n    {\n      mark_not_dis <- append(mark_not_dis, j)\n      next()\n    }\n    M1 <- M_j[ind1]\n    M2 <- M_j[ind2]\n    aic_uni <- 2*mc_uni$df - 2*mc_uni$loglik\n    aic_mix <- 2*mc_mix$df - 2*mc_mix$loglik\n    aic_norm <- (aic_uni - aic_mix)/n\n    flagComp <- 0      \n    if(flag_uni | aic_norm < D)\n    {\n      mark_not_dis <- append(mark_not_dis, j)\n    }\n    else\n    {\n      label <- mc_mix$classification\n      mean_M1 <- mean(M1)\n      mean_M2 <- mean(M2)\n      var_M1 <- var(M1)\n      var_M2 <- var(M2)\n      pi_M1 <- length(M1)/n\n      pi_M2 <- 1 - pi_M1 \n      ind_marker <- append(ind_marker,j)\n      if(mean_M1 > mean_M2)\n      {\n        label[ind1] <- 1\n        label[ind2] <- 0\n        mu1 <- append(mu1, mean_M2)\n        mu2 <- append(mu2, mean_M1)\n        Var1 <- append(Var1, var_M2)\n        Var2 <- append(Var2, var_M1)\n        pi1 <- append(pi1, pi_M2)\n        pi2 <- append(pi2, pi_M1)\n      }\n      else\n      {\n        label[ind1] <- 0\n        label[ind2] <- 1\n        mu1 <- append(mu1, mean_M1)\n        mu2 <- append(mu2, mean_M2)\n        Var1 <- append(Var1, var_M1)\n        Var2 <- append(Var2, var_M2)\n        pi1 <- append(pi1, pi_M1)\n        pi2 <- append(pi2, pi_M2)\n        \n      }\n      lve <- length(Resaic)\n      if(!lve)\n      {\n        child$G <-  indices[which(label == 0)]\n        child$D <-  indices[which(label == 1)]\n      } \n      else \n      {\n        if(max(Resaic) < aic_norm)\n        {\n          child$G <-  indices[which(label == 0)]\n          child$D <-  indices[which(label == 1)]\n        }\n      }\n      Resaic <-  append(Resaic, aic_norm)\n    } \n  }\n  len_ind_marker <- length(ind_marker)\n  if (!len_ind_marker)\n  {\n    return(list(\"mark_not_dis\"=mark_not_dis))\n  }\n  else if(len_ind_marker == 1)\n  {\n    return(list(\"nAIC\" = Resaic, \"ind\" = ind_marker, \n                \"mark_not_dis\" = mark_not_dis, \"child\" = child, \n                \"mu1\" = mu1, \"mu2\" = mu2, \n                \"Var1\" = Var1, \"Var2\" = Var2, \n                \"pi1\" = pi1, \"pi2\" = pi2))\n  }\n  else\n  {\n    res <- cbind(Resaic, ind_marker, mu1, mu2, Var1, Var2, pi1, pi2)\n    res <- res[order(res[,1],decreasing = TRUE),]\n    return(list(\"nAIC\" = res[,1], \"ind\" = res[,2], \n                \"mark_not_dis\" = mark_not_dis, \"child\" = child, \n                \"mu1\"= res[1,3], \"mu2\"= res[1,4],\n                \"Var1\" = res[1,5], \"Var2\" = res[1,6],\n                \"pi1\"= res[1,7], \"pi2\" = res[1,8]))\n  }\n}\n\n\n\n",
    "created" : 1493972884017.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3754790604",
    "id" : "384AE023",
    "lastKnownWriteTime" : 1493902167,
    "path" : "P:/Git/Cytometree/R/CytEM.R",
    "project_path" : "R/CytEM.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}