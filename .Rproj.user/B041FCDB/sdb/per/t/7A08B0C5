{
    "collab_server" : "",
    "contents" : "\n\n#################################### GvHD #####################################\n\nsetwd(\"~/GvHD\")\n# ech = iter\nn <- 12\nF_GVHD <-  c()\nn_cells <- 0\nfor (iter in 1:n){\n  sample <- read.csv(paste(\"0\",as.character(iter),\".csv\",sep=\"\"))[,-c(1,2)]\n  label <- read.csv(paste(\"_0\",as.character(iter),\".csv\",sep=\"\"))[,1]     \n  #   \n  #   res <- CytomeTree(sample,plot=FALSE,minleaf = 1,\n  #                     Split = \"ICL\", distr = \"gaussian\")\n  res <- CytomeTree(sample,plot=TRUE,minleaf = 1)\n  #   \n  #   Partition <- relabel(res$labels)\n  Partition <- res$labels\n  #   print(table(Partition))\n  \n  #   r = flowMeans(sample)\n  #   Partition <- r@Labels[[5]]\n  F_GVHD <- append(F_GVHD,FmeasureC_no0(ref=label, pred=Partition))\n  cat(iter,\"\\n\")\n}\n\nres$Signtree\nnames\n# \n# names(res)\n# res$marker_tree\n# \nF_GVHD\n# # iter 9 jolie\n# plot(F_GVHD,ylim=c(0,1))\nround(mean(F_GVHD),2)\n# bootstrapCI(F_GVHD,n=10000,alpha=0.05)\n# table(Partition)\n# table(label)\n# par(mfrow=c(1,2))\n# plot(sample[,1], sample[,3], col=label+2)\n# plot(sample[,1], sample[,3], col=relabel(Partition))\n# \n\n\n\n###############\n##################### HSCT #####################################\n\nsetwd(\"~/bttf/HSCT\")\n# ech = iter\nn <- 30\nF_HSCT <-  c()\nn_cells <- 0\nfor (iter in 1:n){\n  sample <- read.csv(paste(\"0\",as.character(iter),\".csv\",sep=\"\"))[,-c(1,2)] \n  label <- read.csv(paste(\"_0\",as.character(iter),\".csv\",sep=\"\"))[,1]\n  n_cells <- n_cells + length(label)\n  res <- CytomeTree(sample,plot=FALSE,minleaf = 1)\n  #   res <- CytomeTree(sample,plot=FALSE,minleaf = 1,\n  #                     Split = \"ICL\", distr = \"gaussian\")   \n  #   \n  Partition <- res$labels \n  \n  F_HSCT <- append(F_HSCT,FmeasureC_no0(ref=label, pred=Partition))\n  cat(iter,\"\\n\")\n}\n\n# table(Partition)\n# \n# # probleme iter = 10\nF_HSCT\nplot(F_HSCT,ylim=c(0,1))\nround(mean(F_HSCT),2)\n# bootstrapCI(F_HSCT,n=10000,alpha=0.05)\n# table(Partition)\n# table(label)\n# # sample 5 suspect  # sample 9 jolie\n# par(mfrow=c(1,2))\n# plot(sample[,1], sample[,4], col=label+1)\n# plot(sample[,1], sample[,4], col=Partition)\n# \n# table(Partition)\n# cT <- clusTag(Partition, res$combinations, minCard = 1)\n# cT\n# \n# table(Partition)\n# \n# table(Partition)\n# table(label)\n#################################### CFSE #####################################\n\n\nsetwd(\"~/bttf/CFSE\")\n# CFSE\n# ech = iter\nn <- 13\nF_CFSE <-  c()\nn_cells <- 0\nfor (iter in 1:n){\n  sample <- read.csv(paste(\"0\",as.character(iter),\".csv\",sep=\"\"))[,-c(1,2)]\n  label <- read.csv(paste(\"_0\",as.character(iter),\".csv\",sep=\"\"))[,1]\n  n_cells <- n_cells + length(label)\n  #   res <- CytomeTree(sample,plot=FALSE,minleaf = 1,\n  #                     Split = \"ICL\", distr = \"gaussian\")   \n  res <- CytomeTree(sample,plot=TRUE,minleaf = 1)\n  Partition <- res$labels \n  FmeasureC_no0(ref=label, pred=Partition)\n  F_CFSE <- append(F_CFSE,FmeasureC_no0(ref=label, pred=Partition))\n  cat(iter,\"\\n\")\n}\n# table(label)\n# F_CFSE\n# plot(F_CFSE,ylim=c(0,1))\n# round(mean(F_CFSE),2)\n# bootstrapCI(F_CFSE,n=10000,alpha=0.05)\n# table(Partition)\n# table(label)\n# par(mfrow=c(1,2))\n# plot(sample[,1],sample[,3], col=label+1)\n# plot(sample[,1], sample[,3], col=Partition+2)\n# \n# \n#################################### Lymph ####################################\n\n\nsetwd(\"~/bttf/Lymph\")\n# Lymph\n# ech = iter\nn <- 30\nF_Lymph <-  c()\nn_cells <- 0\nfor (iter in 1:n){\n  sample <- read.csv(paste(\"0\",as.character(iter),\".csv\",sep=\"\"))[,-c(1,2)]\n  label <- read.csv(paste(\"_0\",as.character(iter),\".csv\",sep=\"\"))[,1]\n  n_cells <- n_cells + length(label)\n  #   res <- CytomeTree(sample,plot=FALSE,minleaf = 1,\n  #                     Split = \"ICL\", distr = \"gaussian\")   \n  res <- CytomeTree(sample,plot=TRUE,minleaf = 1)  \n  Partition <- res$labels \n  #   print(table(Partition))\n  F_Lymph <- append(F_Lymph,FmeasureC_no0(ref=label, pred=Partition))\n  cat(iter,\"\\n\")\n}\n# \nF_Lymph\n# plot(F_Lymph,ylim=c(0,1))\nround(mean(F_Lymph),2)\n# bootstrapCI(F_Lymph,n=10000,alpha=0.05)\n# \n# plot(sample[,1], sample[,3],col=label)\n# table(label)\n# table(Partition)\n# plot(sample[,1],sample[,2], col=label+1)\n# plot(sample[,1], sample[,2], col=Partition+2)\n\n\n##################################### NDD #####################################\n\nsetwd(\"~/bttf/NDD\")\n# NDD\n# ech = iter\nn <- 30\nF_NDD <-  c()\nn_cells <- 0\nfor (iter in 1:n){\n  sample <- read.csv(paste(\"0\",as.character(iter),\".csv\",sep=\"\"))[,-c(1,2)]\n  label <- read.csv(paste(\"_0\",as.character(iter),\".csv\",sep=\"\"))[,1]\n  n_cells <- n_cells + length(label)\n  #   res <- CytomeTree(sample,plot=FALSE,minleaf = 1,\n  #                     Split = \"ICL\", distr = \"gaussian\")  \n  res <- CytomeTree(sample,plot=TRUE,minleaf = 1)\n  Partition <- res$labels \n  F_NDD <- append(F_NDD,FmeasureC_no0(ref=label, pred=Partition))\n  cat(iter ,\"\\n\") \n}\n\n# F_NDD\n# plot(F_NDD,ylim=c(0,1))\n# round(mean(F_NDD),2)\n# bootstrapCI(F_NDD,n=10000,alpha=0.05)\n# table(Partition)\n# table(label)\n# #sample 30 plot interessant\n# plot(sample[,1],sample[,2], col=label+1)\n# plot(sample[,1], sample[,2], col=Partition+2)\n# \n# \n# ###############################################################################\n\nF_tot <- c(F_GVHD, F_HSCT, F_CFSE, F_Lymph, F_NDD)\nround(mean(F_tot),2)\nbootstrapCI(F_tot,n=10000,alpha=0.05)\n\nmean(F_CFSE)\n###############################################################################\n\n\n\n\n\n\n\n\ng<- make_ring(10)\n## Not run: tkplot(g)\n\n## Not run: \n## Saving a tkplot() to a file programatically\ng <- make_star(10, center=10) %u% make_ring(9, directed=TRUE)\nE(g)$width <- sample(1:10, ecount(g), replace=TRUE)\nlay <- layout_nicely(g)\n\nid <- tkplot(g, layout=lay)\ncanvas <- tk_canvas(id)\ntkpostscript(canvas, file=\"/tmp/output.eps\")\ntk_close(id)\n\n## End(Not run)\n\n## Not run: \n## Setting the coordinates and adding a title label\ng <- make_ring(10)\nid <- tkplot(make_ring(10), canvas.width=450, canvas.height=500)\n\ncanvas <- tk_canvas(id)\npadding <- 20\ncoords <- norm_coords(layout_in_circle(g), 0+padding, 450-padding,\n                      50+padding, 500-padding)\ntk_set_coords(id, coords)\n\nwidth <- as.numeric(tkcget(canvas, \"-width\"))\nheight <- as.numeric(tkcget(canvas, \"-height\"))\ntkcreate(canvas, \"text\", width/2, 25, text=\"My title\",\n         justify=\"center\", font=tcltk::tkfont.create(family=\"helvetica\"\n                                                     ,size=20,weight=\"bold\"))\n\n\n\n\n",
    "created" : 1477130687547.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1563022860",
    "id" : "7A08B0C5",
    "lastKnownWriteTime" : 1478790364,
    "last_content_update" : 1478790364,
    "path" : "~/Cytometree/FlowCapI.R",
    "project_path" : "FlowCapI.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}